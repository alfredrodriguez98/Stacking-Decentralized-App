{
  "contractName": "Stacking_Dapp",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Dummy",
          "name": "_dummyToken",
          "type": "address"
        },
        {
          "internalType": "contract Tether",
          "name": "_tetherDummy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dummy_token",
      "outputs": [
        {
          "internalType": "contract Dummy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStacked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStacking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stackingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tether_dummy",
      "outputs": [
        {
          "internalType": "contract Tether",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unStakeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueDummyRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Dummy\",\"name\":\"_dummyToken\",\"type\":\"address\"},{\"internalType\":\"contract Tether\",\"name\":\"_tetherDummy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dummy_token\",\"outputs\":[{\"internalType\":\"contract Dummy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStacked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStacking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueDummyRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stackingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tether_dummy\",\"outputs\":[{\"internalType\":\"contract Tether\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Stacking_DApp.sol\":\"Stacking_Dapp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Dummy_Token.sol\":{\"keccak256\":\"0x2ffaca4a4851bdfb7dbc6a921b6d8ab591ed947c53a6c3dd0b980750a603d6c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c770da5ee26d69418eb0f24be87870592bd6c07976cb8b9a78ec0c935b70a9b\",\"dweb:/ipfs/QmeNqGtpUEFMEN3Cd7AudcWnN5JwKjWWMBcrnbLrpt6dkG\"]},\"project:/contracts/Stacking_DApp.sol\":{\"keccak256\":\"0x17400dda96cdc88c23b5dcdf45f6ddfd69dbe24923fec1f8487cec5a06387a03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67c98bb48d792adcb2532f422504431017a246032887b3346219902611432c6e\",\"dweb:/ipfs/QmWa81PEacFi5usmREATBYYMovV8ooM7Fofo8L4mKmQ9mG\"]},\"project:/contracts/Tether_Token.sol\":{\"keccak256\":\"0xf86272fd89772d7573b5588c6c174393260d6954473465a69135a476b05ead86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6acd1b09ba5cae44422927cc29e6fbe2e55338254a3c5484b4a402b80ce69c11\",\"dweb:/ipfs/QmZ6CkjwJuHXh6hdenNksdQUvQbANmXquzogoyNmCFzQAm\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f537461636b696e67204461707000000000000000000000000000000000000000815250600090805190602001906200005192919062000150565b503480156200005f57600080fd5b506040516200150e3803806200150e8339818101604052810190620000859190620002c3565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200036f565b8280546200015e9062000339565b90600052602060002090601f016020900481019282620001825760008555620001ce565b82601f106200019d57805160ff1916838001178555620001ce565b82800160010185558215620001ce579182015b82811115620001cd578251825591602001919060010190620001b0565b5b509050620001dd9190620001e1565b5090565b5b80821115620001fc576000816000905550600101620001e2565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002328262000205565b9050919050565b6000620002468262000225565b9050919050565b620002588162000239565b81146200026457600080fd5b50565b60008151905062000278816200024d565b92915050565b60006200028b8262000225565b9050919050565b6200029d816200027e565b8114620002a957600080fd5b50565b600081519050620002bd8162000292565b92915050565b60008060408385031215620002dd57620002dc62000200565b5b6000620002ed8582860162000267565b92505060206200030085828601620002ac565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035257607f821691505b602082108114156200036957620003686200030a565b5b50919050565b61118f806200037f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806378197289116100715780637819728914610154578063cda6b84714610184578063f7feadaf146101a0578063f851a440146101aa578063f9075fc6146101c8578063fd5e6dd1146101e6576100a9565b806306fdde03146100ae57806307e9417a146100cc5780631c1d4821146100fc57806332ac90cf1461011a5780634aa3f6241461014a575b600080fd5b6100b6610216565b6040516100c39190610b83565b60405180910390f35b6100e660048036038101906100e19190610c08565b6102a4565b6040516100f39190610c50565b60405180910390f35b6101046102c4565b6040516101119190610cca565b60405180910390f35b610134600480360381019061012f9190610c08565b6102ea565b6040516101419190610c50565b60405180910390f35b61015261030a565b005b61016e60048036038101906101699190610c08565b6104d2565b60405161017b9190610cfe565b60405180910390f35b61019e60048036038101906101999190610d45565b6104ea565b005b6101a86107c6565b005b6101b2610a5f565b6040516101bf9190610d81565b60405180910390f35b6101d0610a85565b6040516101dd9190610dbd565b60405180910390f35b61020060048036038101906101fb9190610d45565b610aab565b60405161020d9190610d81565b60405180910390f35b6000805461022390610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461024f90610e07565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b505050505081565b60076020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900460ff1681565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038890610e85565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103ee929190610ea5565b6020604051808303816000875af115801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190610efa565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60056020528060005260406000206000915090505481565b6000811161052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490610f73565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161058c93929190610f93565b6020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610efa565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461061b9190610ff9565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610713576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d906110c1565b60405180910390fd5b60005b600480549050811015610a5c57600060056000600484815481106108805761087f6110e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a4957600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6004838154811061093e5761093d6110e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600060048681548110610981576109806110e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401610a04929190610ea5565b6020604051808303816000875af1158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190610efa565b505b8080610a5490611110565b915050610859565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048181548110610abb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b24578082015181840152602081019050610b09565b83811115610b33576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b5582610aea565b610b5f8185610af5565b9350610b6f818560208601610b06565b610b7881610b39565b840191505092915050565b60006020820190508181036000830152610b9d8184610b4a565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bd582610baa565b9050919050565b610be581610bca565b8114610bf057600080fd5b50565b600081359050610c0281610bdc565b92915050565b600060208284031215610c1e57610c1d610ba5565b5b6000610c2c84828501610bf3565b91505092915050565b60008115159050919050565b610c4a81610c35565b82525050565b6000602082019050610c656000830184610c41565b92915050565b6000819050919050565b6000610c90610c8b610c8684610baa565b610c6b565b610baa565b9050919050565b6000610ca282610c75565b9050919050565b6000610cb482610c97565b9050919050565b610cc481610ca9565b82525050565b6000602082019050610cdf6000830184610cbb565b92915050565b6000819050919050565b610cf881610ce5565b82525050565b6000602082019050610d136000830184610cef565b92915050565b610d2281610ce5565b8114610d2d57600080fd5b50565b600081359050610d3f81610d19565b92915050565b600060208284031215610d5b57610d5a610ba5565b5b6000610d6984828501610d30565b91505092915050565b610d7b81610bca565b82525050565b6000602082019050610d966000830184610d72565b92915050565b6000610da782610c97565b9050919050565b610db781610d9c565b82525050565b6000602082019050610dd26000830184610dae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e1f57607f821691505b60208210811415610e3357610e32610dd8565b5b50919050565b7f596f757220737461636b696e672062616c616e6365206973207a65726f000000600082015250565b6000610e6f601d83610af5565b9150610e7a82610e39565b602082019050919050565b60006020820190508181036000830152610e9e81610e62565b9050919050565b6000604082019050610eba6000830185610d72565b610ec76020830184610cef565b9392505050565b610ed781610c35565b8114610ee257600080fd5b50565b600081519050610ef481610ece565b92915050565b600060208284031215610f1057610f0f610ba5565b5b6000610f1e84828501610ee5565b91505092915050565b7f416d6f756e742043616e6e6f74206265205a65726f0000000000000000000000600082015250565b6000610f5d601583610af5565b9150610f6882610f27565b602082019050919050565b60006020820190508181036000830152610f8c81610f50565b9050919050565b6000606082019050610fa86000830186610d72565b610fb56020830185610d72565b610fc26040830184610cef565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100482610ce5565b915061100f83610ce5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561104457611043610fca565b5b828201905092915050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b60006110ab602283610af5565b91506110b68261104f565b604082019050919050565b600060208201905081810360008301526110da8161109e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061111b82610ce5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561114e5761114d610fca565b5b60018201905091905056fea264697066735822122002ccf08306e12dc804401be7f9cdfa799dc868fe89105108a05c8afebe0c227d64736f6c634300080a0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2530:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:8",
                "type": ""
              }
            ],
            "src": "7:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:8",
                "type": ""
              }
            ],
            "src": "334:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:8",
                "type": ""
              }
            ],
            "src": "466:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "664:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "646:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "635:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Dummy_$23",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "607:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "617:7:8",
                "type": ""
              }
            ],
            "src": "568:108:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "737:91:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "806:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "808:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "808:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "808:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "760:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "797:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Dummy_$23",
                              "nodeType": "YulIdentifier",
                              "src": "767:29:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "767:36:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "757:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:47:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:55:8"
                  },
                  "nodeType": "YulIf",
                  "src": "747:75:8"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Dummy_$23",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:8",
                "type": ""
              }
            ],
            "src": "682:146:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:92:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "919:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "928:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "919:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "989:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Dummy_$23",
                      "nodeType": "YulIdentifier",
                      "src": "950:38:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:45:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:45:8"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Dummy_$23_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "887:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "895:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:8",
                "type": ""
              }
            ],
            "src": "834:167:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1066:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1076:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1105:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1087:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1076:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Tether_$292",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1048:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1058:7:8",
                "type": ""
              }
            ],
            "src": "1007:110:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1180:93:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1251:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1260:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1263:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1253:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1253:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1253:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1203:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1242:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Tether_$292",
                              "nodeType": "YulIdentifier",
                              "src": "1210:31:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1210:38:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1200:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:49:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:57:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1190:77:8"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Tether_$292",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1173:5:8",
                "type": ""
              }
            ],
            "src": "1123:150:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1356:94:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1366:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1381:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1375:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1366:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1438:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Tether_$292",
                      "nodeType": "YulIdentifier",
                      "src": "1397:40:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1397:47:8"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Tether_$292_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1334:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1342:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1350:5:8",
                "type": ""
              }
            ],
            "src": "1279:171:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1576:439:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1622:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1624:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1624:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1624:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1597:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1606:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1593:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1618:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1715:140:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1730:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1744:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1734:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1759:86:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1817:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1828:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1813:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1813:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1837:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Dummy_$23_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1769:43:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1769:76:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1759:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1865:143:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1880:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1894:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1884:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1910:88:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1970:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1981:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1966:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Tether_$292_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1920:45:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1920:78:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1910:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Dummy_$23t_contract$_Tether_$292_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1538:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1549:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1561:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1569:6:8",
                "type": ""
              }
            ],
            "src": "1456:559:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2049:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2066:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2069:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2059:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2059:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2059:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2163:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2166:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2156:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2156:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2187:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2190:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2180:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2180:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2180:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2021:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2258:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2268:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2282:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2278:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2268:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2299:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2329:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2325:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2303:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2376:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2390:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2404:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2412:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2400:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2400:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2390:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2356:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2349:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2349:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2346:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2479:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2493:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2493:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2493:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2443:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2466:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2474:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2463:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2463:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2440:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2437:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2242:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2251:6:8",
                "type": ""
              }
            ],
            "src": "2207:320:8"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Dummy_$23(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Dummy_$23(value) {\n        if iszero(eq(value, cleanup_t_contract$_Dummy_$23(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Dummy_$23_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Dummy_$23(value)\n    }\n\n    function cleanup_t_contract$_Tether_$292(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Tether_$292(value) {\n        if iszero(eq(value, cleanup_t_contract$_Tether_$292(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Tether_$292_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Tether_$292(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Dummy_$23t_contract$_Tether_$292_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Dummy_$23_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Tether_$292_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11671:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:8",
                "type": ""
              }
            ],
            "src": "7:99:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:8",
                "type": ""
              }
            ],
            "src": "112:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:8",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:8",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:8"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:8"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:8"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:8"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:8"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:8"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:8"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:8",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:8"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:8"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:8",
                    "statements": []
                  },
                  "src": "365:113:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:8"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:8"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:8"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:8"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:8",
                "type": ""
              }
            ],
            "src": "287:307:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:8",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:8"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:8",
                "type": ""
              }
            ],
            "src": "600:102:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:8",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:8"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:8",
                "type": ""
              }
            ],
            "src": "708:364:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:8"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:8",
                "type": ""
              }
            ],
            "src": "1078:313:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1430:6:8",
                "type": ""
              }
            ],
            "src": "1397:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1690:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1700:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1700:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1601:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1779:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1794:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1779:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1761:7:8",
                "type": ""
              }
            ],
            "src": "1724:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1911:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1940:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1922:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1911:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1883:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1893:7:8",
                "type": ""
              }
            ],
            "src": "1856:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2001:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2058:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2060:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2060:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2060:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2024:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2049:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2031:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2031:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2021:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2011:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1994:5:8",
                "type": ""
              }
            ],
            "src": "1958:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2138:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2148:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2170:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2148:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2213:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2186:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2116:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2124:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2132:5:8",
                "type": ""
              }
            ],
            "src": "2086:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2297:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2343:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2345:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2345:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2345:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2318:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2327:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2314:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2339:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2310:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2307:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2436:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2451:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2465:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2455:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2480:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2515:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2526:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2511:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2511:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2535:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2490:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2490:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2480:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2267:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2278:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2290:6:8",
                "type": ""
              }
            ],
            "src": "2231:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2608:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2618:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2643:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2636:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2636:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2629:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2629:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2618:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2590:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2600:7:8",
                "type": ""
              }
            ],
            "src": "2566:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2721:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2738:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2758:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2743:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2743:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2731:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2731:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2731:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2709:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2716:3:8",
                "type": ""
              }
            ],
            "src": "2662:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2869:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2879:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2891:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2902:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2887:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2879:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2953:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2966:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2977:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2962:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2962:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2915:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2915:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2841:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2853:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2864:4:8",
                "type": ""
              }
            ],
            "src": "2777:210:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3025:28:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3035:12:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3042:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3035:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3011:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3021:3:8",
                "type": ""
              }
            ],
            "src": "2993:60:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3119:82:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3129:66:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3187:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3169:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3169:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3160:8:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3160:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3142:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3142:53:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3129:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3099:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3109:9:8",
                "type": ""
              }
            ],
            "src": "3059:142:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3267:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3277:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3321:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3290:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3277:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3247:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3257:9:8",
                "type": ""
              }
            ],
            "src": "3207:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3413:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3423:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3467:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3436:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3436:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3423:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Tether_$292_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3393:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3403:9:8",
                "type": ""
              }
            ],
            "src": "3339:140:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3564:80:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3581:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3631:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Tether_$292_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3586:44:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:51:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3574:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3574:64:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3574:64:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Tether_$292_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3552:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3559:3:8",
                "type": ""
              }
            ],
            "src": "3485:159:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3762:138:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3772:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3784:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3780:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3772:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3866:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3879:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3890:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3875:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3875:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Tether_$292_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3808:57:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:85:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3808:85:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Tether_$292__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3734:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3746:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3757:4:8",
                "type": ""
              }
            ],
            "src": "3650:250:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3951:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3961:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3972:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3961:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3933:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3943:7:8",
                "type": ""
              }
            ],
            "src": "3906:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4054:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4071:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4094:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4076:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4076:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4064:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4064:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4064:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4042:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4049:3:8",
                "type": ""
              }
            ],
            "src": "3989:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4211:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4221:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4233:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4244:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4229:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4229:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4221:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4301:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4314:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4325:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4310:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4310:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4257:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4257:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4257:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4183:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4195:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4206:4:8",
                "type": ""
              }
            ],
            "src": "4113:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4384:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4441:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4450:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4453:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4443:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4443:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4443:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4407:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4432:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4414:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4414:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4404:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4404:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4397:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4397:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4394:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4377:5:8",
                "type": ""
              }
            ],
            "src": "4341:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4521:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4531:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4553:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4540:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4540:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4531:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4596:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4569:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4569:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4499:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4507:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4515:5:8",
                "type": ""
              }
            ],
            "src": "4469:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4680:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4726:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4728:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4728:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4728:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4701:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4710:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4697:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4697:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4722:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4693:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4693:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "4690:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4819:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4834:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4848:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4838:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4863:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4898:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4909:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4894:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4894:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4918:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4873:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4873:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4863:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4650:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4661:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4673:6:8",
                "type": ""
              }
            ],
            "src": "4614:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5014:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5031:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5054:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5036:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5024:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5024:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5024:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5002:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5009:3:8",
                "type": ""
              }
            ],
            "src": "4949:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5171:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5181:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5193:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5204:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5189:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5189:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5181:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5261:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5274:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5285:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5270:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5270:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5217:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5217:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5217:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5143:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5155:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5166:4:8",
                "type": ""
              }
            ],
            "src": "5073:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5373:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5383:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5427:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5396:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5396:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "5383:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Dummy_$23_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5353:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "5363:9:8",
                "type": ""
              }
            ],
            "src": "5301:138:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5522:78:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5539:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5587:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Dummy_$23_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5544:42:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5544:49:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5532:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5532:62:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5532:62:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Dummy_$23_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5510:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5517:3:8",
                "type": ""
              }
            ],
            "src": "5445:155:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5716:136:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5726:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5738:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5749:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5734:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5734:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5726:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5818:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5831:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5842:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5827:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5827:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Dummy_$23_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5762:55:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:83:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5762:83:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Dummy_$23__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5688:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5700:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5711:4:8",
                "type": ""
              }
            ],
            "src": "5606:246:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5886:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5903:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5906:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5896:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5896:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6000:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6003:4:8",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6024:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6027:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6017:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6017:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6017:15:8"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "5858:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6095:269:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6105:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6119:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6125:1:8",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6115:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6105:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6136:38:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6166:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6172:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6162:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:12:8"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6140:18:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6213:51:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6227:27:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6241:6:8"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6249:4:8",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6237:3:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6237:17:8"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6227:6:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6193:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6186:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6186:26:8"
                  },
                  "nodeType": "YulIf",
                  "src": "6183:81:8"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6316:42:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "6330:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6330:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6330:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6280:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6303:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6311:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6300:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6300:14:8"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6277:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6277:38:8"
                  },
                  "nodeType": "YulIf",
                  "src": "6274:84:8"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6079:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6088:6:8",
                "type": ""
              }
            ],
            "src": "6044:320:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6476:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6498:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6506:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6494:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6494:14:8"
                      },
                      {
                        "hexValue": "596f757220737461636b696e672062616c616e6365206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6510:31:8",
                        "type": "",
                        "value": "Your stacking balance is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6487:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6487:55:8"
                }
              ]
            },
            "name": "store_literal_in_memory_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6468:6:8",
                "type": ""
              }
            ],
            "src": "6370:179:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6701:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6711:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6777:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6782:2:8",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6718:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6711:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6883:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
                      "nodeType": "YulIdentifier",
                      "src": "6794:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6794:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6794:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6896:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6907:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6912:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6903:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6903:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6896:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6689:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6697:3:8",
                "type": ""
              }
            ],
            "src": "6555:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7098:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7108:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7120:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7131:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7116:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7116:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7108:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7155:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7166:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7151:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7151:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7174:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7180:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7170:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7170:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7144:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7144:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7144:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7200:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7334:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7208:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7200:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7078:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7093:4:8",
                "type": ""
              }
            ],
            "src": "6927:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7478:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7488:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7500:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7496:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7488:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7568:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7581:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7592:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7577:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7577:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7524:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7524:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7649:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7662:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7673:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7658:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7658:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7605:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7605:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7605:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7442:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7454:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7462:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7473:4:8",
                "type": ""
              }
            ],
            "src": "7352:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7730:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7784:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7793:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7796:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7786:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7786:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7786:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7753:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7775:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7760:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7760:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7750:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7750:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7743:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7743:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "7740:60:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7723:5:8",
                "type": ""
              }
            ],
            "src": "7690:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7872:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7882:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7897:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7891:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7891:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7882:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7937:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7913:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7913:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7913:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7850:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7858:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7866:5:8",
                "type": ""
              }
            ],
            "src": "7812:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8029:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8075:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8077:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8077:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8077:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8050:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8059:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8046:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8046:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8071:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8042:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8042:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "8039:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8168:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8183:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8197:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8187:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8212:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8255:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8266:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8251:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8251:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8275:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8222:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8222:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8212:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7999:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8010:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8022:6:8",
                "type": ""
              }
            ],
            "src": "7955:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8412:65:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8434:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8442:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8430:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8430:14:8"
                      },
                      {
                        "hexValue": "416d6f756e742043616e6e6f74206265205a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8446:23:8",
                        "type": "",
                        "value": "Amount Cannot be Zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8423:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8423:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8423:47:8"
                }
              ]
            },
            "name": "store_literal_in_memory_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8404:6:8",
                "type": ""
              }
            ],
            "src": "8306:171:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8629:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8639:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8705:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8710:2:8",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8646:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8646:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8639:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8811:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
                      "nodeType": "YulIdentifier",
                      "src": "8722:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8722:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8722:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8824:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8835:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8840:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8831:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8831:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8824:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8617:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8625:3:8",
                "type": ""
              }
            ],
            "src": "8483:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9026:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9036:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9048:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9059:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9044:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9044:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9036:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9083:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9094:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9079:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9079:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9102:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9108:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9098:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9098:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9072:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9072:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9072:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9128:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9262:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9136:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9136:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9128:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9006:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9021:4:8",
                "type": ""
              }
            ],
            "src": "8855:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9434:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9444:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9456:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9467:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9452:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9452:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9444:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9524:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9537:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9548:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9533:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9480:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9480:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9480:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9605:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9618:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9629:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9614:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9614:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9561:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9561:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9561:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9687:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9700:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9711:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9696:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9696:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9643:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9643:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9643:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9390:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9402:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9410:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9418:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9429:4:8",
                "type": ""
              }
            ],
            "src": "9280:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9756:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9773:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9776:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9766:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9766:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9766:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9870:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9873:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9863:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9863:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9863:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9894:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9897:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9887:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9887:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9887:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9728:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9958:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9968:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9991:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9973:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9973:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9968:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10002:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10025:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10007:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10007:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10002:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10165:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10167:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10167:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10167:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10086:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10093:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10161:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10089:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10089:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10083:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10083:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "10080:107:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10197:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10208:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10211:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10204:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10204:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10197:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9945:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9948:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9954:3:8",
                "type": ""
              }
            ],
            "src": "9914:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10331:115:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10353:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10361:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10349:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10349:14:8"
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10365:34:8",
                        "type": "",
                        "value": "Only admin can perform this acti"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10342:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10342:58:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10342:58:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10421:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10429:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10417:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10417:15:8"
                      },
                      {
                        "hexValue": "6f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10434:4:8",
                        "type": "",
                        "value": "on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10410:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10410:29:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10410:29:8"
                }
              ]
            },
            "name": "store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10323:6:8",
                "type": ""
              }
            ],
            "src": "10225:221:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10598:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10608:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10674:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10679:2:8",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10615:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10615:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10608:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10780:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                      "nodeType": "YulIdentifier",
                      "src": "10691:88:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10691:93:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10691:93:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10793:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10804:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10809:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10800:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10800:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10793:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10586:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10594:3:8",
                "type": ""
              }
            ],
            "src": "10452:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10995:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11005:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11017:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11028:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11013:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11005:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11052:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11063:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11048:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11048:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11071:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11077:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11067:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11067:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11041:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11041:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11041:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11097:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11231:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11105:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11105:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11097:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10975:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10990:4:8",
                "type": ""
              }
            ],
            "src": "10824:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11277:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11294:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11297:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11287:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11287:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11287:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11391:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11394:4:8",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11384:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11384:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11384:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11415:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11418:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11408:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11408:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11408:15:8"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11249:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11478:190:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11488:33:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11515:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11497:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11497:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11488:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11611:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11613:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11613:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11613:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11536:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11543:66:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11533:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11533:77:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11530:103:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11642:20:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11653:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11660:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11649:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11649:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11642:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11464:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11474:3:8",
                "type": ""
              }
            ],
            "src": "11435:233:8"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Tether_$292_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Tether_$292_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Tether_$292_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Tether_$292__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Tether_$292_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Dummy_$23_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Dummy_$23_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Dummy_$23_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Dummy_$23__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Dummy_$23_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your stacking balance is zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount Cannot be Zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can perform this acti\")\n\n        mstore(add(memPtr, 32), \"on\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "125:1537:2:-:0;;;153:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;463:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;536:11;522;;:25;;;;;;;;;;;;;;;;;;569:12;554;;:27;;;;;;;;;;;;;;;;;;596:10;588:5;;:18;;;;;;;;;;;;;;;;;;463:149;;125:1537;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:108::-;617:7;646:24;664:5;646:24;:::i;:::-;635:35;;568:108;;;:::o;682:146::-;767:36;797:5;767:36;:::i;:::-;760:5;757:47;747:75;;818:1;815;808:12;747:75;682:146;:::o;834:167::-;903:5;934:6;928:13;919:22;;950:45;989:5;950:45;:::i;:::-;834:167;;;;:::o;1007:110::-;1058:7;1087:24;1105:5;1087:24;:::i;:::-;1076:35;;1007:110;;;:::o;1123:150::-;1210:38;1242:5;1210:38;:::i;:::-;1203:5;1200:49;1190:77;;1263:1;1260;1253:12;1190:77;1123:150;:::o;1279:171::-;1350:5;1381:6;1375:13;1366:22;;1397:47;1438:5;1397:47;:::i;:::-;1279:171;;;;:::o;1456:559::-;1561:6;1569;1618:2;1606:9;1597:7;1593:23;1589:32;1586:119;;;1624:79;;:::i;:::-;1586:119;1744:1;1769:76;1837:7;1828:6;1817:9;1813:22;1769:76;:::i;:::-;1759:86;;1715:140;1894:2;1920:78;1990:7;1981:6;1970:9;1966:22;1920:78;:::i;:::-;1910:88;;1865:143;1456:559;;;;;:::o;2021:180::-;2069:77;2066:1;2059:88;2166:4;2163:1;2156:15;2190:4;2187:1;2180:15;2207:320;2251:6;2288:1;2282:4;2278:12;2268:22;;2335:1;2329:4;2325:12;2356:18;2346:81;;2412:4;2404:6;2400:17;2390:27;;2346:81;2474:2;2466:6;2463:14;2443:18;2440:38;2437:84;;;2493:18;;:::i;:::-;2437:84;2258:269;2207:320;;;:::o;125:1537:2:-;;;;;;;",
  "deployedSourceMap": "125:1537:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;248:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;367:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:279;;;:::i;:::-;;312:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:398;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1421:238;;;:::i;:::-;;194:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;219:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;153:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;414:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;248:26::-;;;;;;;;;;;;;:::o;367:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1136:279::-;1174:15;1192;:27;1208:10;1192:27;;;;;;;;;;;;;;;;1174:45;;1246:1;1236:7;:11;1228:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1290:12;;;;;;;;;;;:21;;;1312:10;1324:7;1290:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1371:1;1341:15;:27;1357:10;1341:27;;;;;;;;;;;;;;;:31;;;;1404:5;1379:10;:22;1390:10;1379:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1167:248;1136:279::o;312:50::-;;;;;;;;;;;;;;;;;:::o;732:398::-;801:1;791:7;:11;783:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;837:12;;;;;;;;;;;:25;;;863:10;883:4;890:7;837:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;965:7;935:15;:27;951:10;935:27;;;;;;;;;;;;;;;;:37;;;;:::i;:::-;905:15;:27;921:10;905:27;;;;;;;;;;;;;;;:67;;;;986:10;:22;997:10;986:22;;;;;;;;;;;;;;;;;;;;;;;;;981:70;;1019:7;1032:10;1019:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;981:70;1084:4;1059:10;:22;1070:10;1059:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1120:4;1095:10;:22;1106:10;1095:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;732:398;:::o;1421:238::-;668:5;;;;;;;;;;;654:19;;:10;:19;;;646:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1479:9:::1;1474:180;1498:7;:14;;;;1494:1;:18;1474:180;;;1562:1;1532:15;:27;1548:7;1556:1;1548:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1532:27;;;;;;;;;;;;;;;;:31;1528:119;;;1576:11;;;;;;;;;;;:20;;;1597:7;1605:1;1597:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1609:15;:27;1625:7;1633:1;1625:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1609:27;;;;;;;;;;;;;;;;1576:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1528:119;1514:3;;;;;:::i;:::-;;;;1474:180;;;;1421:238::o:0;194:20::-;;;;;;;;;;;;;:::o;219:24::-;;;;;;;;;;;;;:::o;281:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:329::-;2290:6;2339:2;2327:9;2318:7;2314:23;2310:32;2307:119;;;2345:79;;:::i;:::-;2307:119;2465:1;2490:53;2535:7;2526:6;2515:9;2511:22;2490:53;:::i;:::-;2480:63;;2436:117;2231:329;;;;:::o;2566:90::-;2600:7;2643:5;2636:13;2629:21;2618:32;;2566:90;;;:::o;2662:109::-;2743:21;2758:5;2743:21;:::i;:::-;2738:3;2731:34;2662:109;;:::o;2777:210::-;2864:4;2902:2;2891:9;2887:18;2879:26;;2915:65;2977:1;2966:9;2962:17;2953:6;2915:65;:::i;:::-;2777:210;;;;:::o;2993:60::-;3021:3;3042:5;3035:12;;2993:60;;;:::o;3059:142::-;3109:9;3142:53;3160:34;3169:24;3187:5;3169:24;:::i;:::-;3160:34;:::i;:::-;3142:53;:::i;:::-;3129:66;;3059:142;;;:::o;3207:126::-;3257:9;3290:37;3321:5;3290:37;:::i;:::-;3277:50;;3207:126;;;:::o;3339:140::-;3403:9;3436:37;3467:5;3436:37;:::i;:::-;3423:50;;3339:140;;;:::o;3485:159::-;3586:51;3631:5;3586:51;:::i;:::-;3581:3;3574:64;3485:159;;:::o;3650:250::-;3757:4;3795:2;3784:9;3780:18;3772:26;;3808:85;3890:1;3879:9;3875:17;3866:6;3808:85;:::i;:::-;3650:250;;;;:::o;3906:77::-;3943:7;3972:5;3961:16;;3906:77;;;:::o;3989:118::-;4076:24;4094:5;4076:24;:::i;:::-;4071:3;4064:37;3989:118;;:::o;4113:222::-;4206:4;4244:2;4233:9;4229:18;4221:26;;4257:71;4325:1;4314:9;4310:17;4301:6;4257:71;:::i;:::-;4113:222;;;;:::o;4341:122::-;4414:24;4432:5;4414:24;:::i;:::-;4407:5;4404:35;4394:63;;4453:1;4450;4443:12;4394:63;4341:122;:::o;4469:139::-;4515:5;4553:6;4540:20;4531:29;;4569:33;4596:5;4569:33;:::i;:::-;4469:139;;;;:::o;4614:329::-;4673:6;4722:2;4710:9;4701:7;4697:23;4693:32;4690:119;;;4728:79;;:::i;:::-;4690:119;4848:1;4873:53;4918:7;4909:6;4898:9;4894:22;4873:53;:::i;:::-;4863:63;;4819:117;4614:329;;;;:::o;4949:118::-;5036:24;5054:5;5036:24;:::i;:::-;5031:3;5024:37;4949:118;;:::o;5073:222::-;5166:4;5204:2;5193:9;5189:18;5181:26;;5217:71;5285:1;5274:9;5270:17;5261:6;5217:71;:::i;:::-;5073:222;;;;:::o;5301:138::-;5363:9;5396:37;5427:5;5396:37;:::i;:::-;5383:50;;5301:138;;;:::o;5445:155::-;5544:49;5587:5;5544:49;:::i;:::-;5539:3;5532:62;5445:155;;:::o;5606:246::-;5711:4;5749:2;5738:9;5734:18;5726:26;;5762:83;5842:1;5831:9;5827:17;5818:6;5762:83;:::i;:::-;5606:246;;;;:::o;5858:180::-;5906:77;5903:1;5896:88;6003:4;6000:1;5993:15;6027:4;6024:1;6017:15;6044:320;6088:6;6125:1;6119:4;6115:12;6105:22;;6172:1;6166:4;6162:12;6193:18;6183:81;;6249:4;6241:6;6237:17;6227:27;;6183:81;6311:2;6303:6;6300:14;6280:18;6277:38;6274:84;;;6330:18;;:::i;:::-;6274:84;6095:269;6044:320;;;:::o;6370:179::-;6510:31;6506:1;6498:6;6494:14;6487:55;6370:179;:::o;6555:366::-;6697:3;6718:67;6782:2;6777:3;6718:67;:::i;:::-;6711:74;;6794:93;6883:3;6794:93;:::i;:::-;6912:2;6907:3;6903:12;6896:19;;6555:366;;;:::o;6927:419::-;7093:4;7131:2;7120:9;7116:18;7108:26;;7180:9;7174:4;7170:20;7166:1;7155:9;7151:17;7144:47;7208:131;7334:4;7208:131;:::i;:::-;7200:139;;6927:419;;;:::o;7352:332::-;7473:4;7511:2;7500:9;7496:18;7488:26;;7524:71;7592:1;7581:9;7577:17;7568:6;7524:71;:::i;:::-;7605:72;7673:2;7662:9;7658:18;7649:6;7605:72;:::i;:::-;7352:332;;;;;:::o;7690:116::-;7760:21;7775:5;7760:21;:::i;:::-;7753:5;7750:32;7740:60;;7796:1;7793;7786:12;7740:60;7690:116;:::o;7812:137::-;7866:5;7897:6;7891:13;7882:22;;7913:30;7937:5;7913:30;:::i;:::-;7812:137;;;;:::o;7955:345::-;8022:6;8071:2;8059:9;8050:7;8046:23;8042:32;8039:119;;;8077:79;;:::i;:::-;8039:119;8197:1;8222:61;8275:7;8266:6;8255:9;8251:22;8222:61;:::i;:::-;8212:71;;8168:125;7955:345;;;;:::o;8306:171::-;8446:23;8442:1;8434:6;8430:14;8423:47;8306:171;:::o;8483:366::-;8625:3;8646:67;8710:2;8705:3;8646:67;:::i;:::-;8639:74;;8722:93;8811:3;8722:93;:::i;:::-;8840:2;8835:3;8831:12;8824:19;;8483:366;;;:::o;8855:419::-;9021:4;9059:2;9048:9;9044:18;9036:26;;9108:9;9102:4;9098:20;9094:1;9083:9;9079:17;9072:47;9136:131;9262:4;9136:131;:::i;:::-;9128:139;;8855:419;;;:::o;9280:442::-;9429:4;9467:2;9456:9;9452:18;9444:26;;9480:71;9548:1;9537:9;9533:17;9524:6;9480:71;:::i;:::-;9561:72;9629:2;9618:9;9614:18;9605:6;9561:72;:::i;:::-;9643;9711:2;9700:9;9696:18;9687:6;9643:72;:::i;:::-;9280:442;;;;;;:::o;9728:180::-;9776:77;9773:1;9766:88;9873:4;9870:1;9863:15;9897:4;9894:1;9887:15;9914:305;9954:3;9973:20;9991:1;9973:20;:::i;:::-;9968:25;;10007:20;10025:1;10007:20;:::i;:::-;10002:25;;10161:1;10093:66;10089:74;10086:1;10083:81;10080:107;;;10167:18;;:::i;:::-;10080:107;10211:1;10208;10204:9;10197:16;;9914:305;;;;:::o;10225:221::-;10365:34;10361:1;10353:6;10349:14;10342:58;10434:4;10429:2;10421:6;10417:15;10410:29;10225:221;:::o;10452:366::-;10594:3;10615:67;10679:2;10674:3;10615:67;:::i;:::-;10608:74;;10691:93;10780:3;10691:93;:::i;:::-;10809:2;10804:3;10800:12;10793:19;;10452:366;;;:::o;10824:419::-;10990:4;11028:2;11017:9;11013:18;11005:26;;11077:9;11071:4;11067:20;11063:1;11052:9;11048:17;11041:47;11105:131;11231:4;11105:131;:::i;:::-;11097:139;;10824:419;;;:::o;11249:180::-;11297:77;11294:1;11287:88;11394:4;11391:1;11384:15;11418:4;11415:1;11408:15;11435:233;11474:3;11497:24;11515:5;11497:24;:::i;:::-;11488:33;;11543:66;11536:5;11533:77;11530:103;;;11613:18;;:::i;:::-;11530:103;11660:1;11653:5;11649:13;11642:20;;11435:233;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.10;\r\n\r\nimport \"./Tether_Token.sol\";\r\nimport \"./Dummy_Token.sol\";\r\n\r\ncontract Stacking_Dapp {\r\n  string public name = \"Stacking Dapp\";\r\n  address public admin;\r\n  Dummy public dummy_token;\r\n  Tether public tether_dummy;\r\n\r\n  address[] public stakers;\r\n\r\n  mapping(address => uint256) public stackingBalance;\r\n  mapping(address => bool) public hasStacked;\r\n  mapping(address => bool) public isStacking;\r\n\r\n  constructor(Dummy _dummyToken, Tether _tetherDummy) {\r\n    dummy_token = _dummyToken;\r\n    tether_dummy = _tetherDummy;\r\n    admin = msg.sender;\r\n  }\r\n\r\n  modifier onlyAdmin() {\r\n    require(msg.sender == admin, \"Only admin can perform this action\");\r\n    _;\r\n  }\r\n\r\n  function stakeToken(uint256 _amount) public {\r\n    require(_amount > 0, \"Amount Cannot be Zero\");\r\n\r\n    tether_dummy.transferFrom(msg.sender, address(this), _amount);\r\n    stackingBalance[msg.sender] = stackingBalance[msg.sender] + _amount;\r\n\r\n    if (!hasStacked[msg.sender]) {\r\n      stakers.push(msg.sender);\r\n    }\r\n\r\n    isStacking[msg.sender] = true;\r\n    hasStacked[msg.sender] = true;\r\n  }\r\n\r\n  function unStakeToken() public {\r\n    uint256 balance = stackingBalance[msg.sender];\r\n\r\n    require(balance > 0, \"Your stacking balance is zero\");\r\n\r\n    tether_dummy.transfer(msg.sender, balance);\r\n\r\n    stackingBalance[msg.sender] = 0;\r\n    isStacking[msg.sender] = false;\r\n  }\r\n\r\n  function issueDummyRewards() public onlyAdmin {\r\n    for (uint256 i = 0; i < stakers.length; i++) {\r\n      if (stackingBalance[stakers[i]] > 0) {\r\n        dummy_token.transfer(stakers[i], stackingBalance[stakers[i]]);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "P:\\Projects\\stacking-dapp\\contracts\\Stacking_DApp.sol",
  "ast": {
    "absolutePath": "project:/contracts/Stacking_DApp.sol",
    "exportedSymbols": {
      "Context": [963],
      "Dummy": [23],
      "ERC20": [838],
      "IERC20": [916],
      "IERC20Metadata": [941],
      "Stacking_Dapp": [268],
      "Tether": [292]
    },
    "id": 269,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": ["solidity", ">=", "0.8", ".10"],
        "nodeType": "PragmaDirective",
        "src": "35:25:2"
      },
      {
        "absolutePath": "project:/contracts/Tether_Token.sol",
        "file": "./Tether_Token.sol",
        "id": 59,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 293,
        "src": "64:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Dummy_Token.sol",
        "file": "./Dummy_Token.sol",
        "id": 60,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 24,
        "src": "94:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stacking_Dapp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 268,
        "linearizedBaseContracts": [268],
        "name": "Stacking_Dapp",
        "nameLocation": "134:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 63,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "167:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "153:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 61,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "153:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "537461636b696e672044617070",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "174:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b110a5c2358a1beea5d4df1c6a0084849fd8ff6536049897d85852fe801e38c8",
                "typeString": "literal_string \"Stacking Dapp\""
              },
              "value": "Stacking Dapp"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 65,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "209:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "194:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9075fc6",
            "id": 68,
            "mutability": "mutable",
            "name": "dummy_token",
            "nameLocation": "232:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "219:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Dummy_$23",
              "typeString": "contract Dummy"
            },
            "typeName": {
              "id": 67,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66,
                "name": "Dummy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23,
                "src": "219:5:2"
              },
              "referencedDeclaration": 23,
              "src": "219:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dummy_$23",
                "typeString": "contract Dummy"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c1d4821",
            "id": 71,
            "mutability": "mutable",
            "name": "tether_dummy",
            "nameLocation": "262:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "248:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$292",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 70,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 292,
                "src": "248:6:2"
              },
              "referencedDeclaration": 292,
              "src": "248:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$292",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 74,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "298:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "281:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "281:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 73,
              "nodeType": "ArrayTypeName",
              "src": "281:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78197289",
            "id": 78,
            "mutability": "mutable",
            "name": "stackingBalance",
            "nameLocation": "347:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "312:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "320:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "312:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "331:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32ac90cf",
            "id": 82,
            "mutability": "mutable",
            "name": "hasStacked",
            "nameLocation": "399:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "367:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 80,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "386:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07e9417a",
            "id": 86,
            "mutability": "mutable",
            "name": "isStacking",
            "nameLocation": "446:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "414:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "414:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 84,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "433:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "515:97:2",
              "statements": [
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "dummy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "522:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dummy_$23",
                        "typeString": "contract Dummy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_dummyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "536:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dummy_$23",
                        "typeString": "contract Dummy"
                      }
                    },
                    "src": "522:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dummy_$23",
                      "typeString": "contract Dummy"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "522:25:2"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "tether_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "554:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$292",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_tetherDummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "569:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$292",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "554:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$292",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "554:27:2"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "588:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "596:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "596:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "588:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "588:18:2"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_dummyToken",
                  "nameLocation": "481:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "475:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Dummy_$23",
                    "typeString": "contract Dummy"
                  },
                  "typeName": {
                    "id": 88,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87,
                      "name": "Dummy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23,
                      "src": "475:5:2"
                    },
                    "referencedDeclaration": 23,
                    "src": "475:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dummy_$23",
                      "typeString": "contract Dummy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_tetherDummy",
                  "nameLocation": "501:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "494:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$292",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 91,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 90,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 292,
                      "src": "494:6:2"
                    },
                    "referencedDeclaration": 292,
                    "src": "494:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$292",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:40:2"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:0:2"
            },
            "scope": 268,
            "src": "463:149:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "639:87:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "654:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "654:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 114,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "668:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "654:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "675:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        },
                        "value": "Only admin can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "646:66:2"
                },
                {
                  "id": 119,
                  "nodeType": "PlaceholderStatement",
                  "src": "719:1:2"
                }
              ]
            },
            "id": 121,
            "name": "onlyAdmin",
            "nameLocation": "627:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:2:2"
            },
            "src": "618:108:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "776:354:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 127,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "791:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "801:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "791:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742043616e6e6f74206265205a65726f",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "804:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
                          "typeString": "literal_string \"Amount Cannot be Zero\""
                        },
                        "value": "Amount Cannot be Zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
                          "typeString": "literal_string \"Amount Cannot be Zero\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "783:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "783:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "863:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "863:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "883:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Stacking_Dapp_$268",
                              "typeString": "contract Stacking_Dapp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Stacking_Dapp_$268",
                              "typeString": "contract Stacking_Dapp"
                            }
                          ],
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "875:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "875:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "890:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 133,
                        "name": "tether_dummy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "837:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$292",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 499,
                      "src": "837:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "837:61:2"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 145,
                        "name": "stackingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "905:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "921:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "921:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "905:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 149,
                          "name": "stackingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "935:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "951:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "951:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "935:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 153,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "965:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "935:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "905:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "905:67:2"
                },
                {
                  "condition": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "985:23:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 157,
                        "name": "hasStacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "986:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 160,
                      "indexExpression": {
                        "expression": {
                          "id": 158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "997:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "997:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "986:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "981:70:2",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1010:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 165,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1032:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1032:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 162,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1019:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1019:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "1019:24:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 171,
                        "name": "isStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1059:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1070:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1070:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1059:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1084:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1059:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:29:2"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 178,
                        "name": "hasStacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1095:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 181,
                      "indexExpression": {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1106:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1106:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1095:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1095:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:29:2"
                }
              ]
            },
            "functionSelector": "cda6b847",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeToken",
            "nameLocation": "741:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "760:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "752:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "751:17:2"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:2"
            },
            "scope": 268,
            "src": "732:398:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1167:248:2",
              "statements": [
                {
                  "assignments": [190],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1182:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1174:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1174:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "baseExpression": {
                      "id": 191,
                      "name": "stackingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1192:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 194,
                    "indexExpression": {
                      "expression": {
                        "id": 192,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1208:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1192:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1174:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "1236:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1246:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1236:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220737461636b696e672062616c616e6365206973207a65726f",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1249:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
                          "typeString": "literal_string \"Your stacking balance is zero\""
                        },
                        "value": "Your stacking balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
                          "typeString": "literal_string \"Your stacking balance is zero\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1312:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1312:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 208,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1324:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 203,
                        "name": "tether_dummy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1290:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$292",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "1290:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:42:2"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 211,
                        "name": "stackingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1341:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "expression": {
                          "id": 212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1357:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1357:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1341:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1371:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1341:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:31:2"
                },
                {
                  "expression": {
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 218,
                        "name": "isStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1379:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 221,
                      "indexExpression": {
                        "expression": {
                          "id": 219,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1390:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1390:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1379:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1404:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1379:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:30:2"
                }
              ]
            },
            "functionSelector": "4aa3f624",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unStakeToken",
            "nameLocation": "1145:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1157:2:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:2"
            },
            "scope": 268,
            "src": "1136:279:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "1467:192:2",
              "statements": [
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "1519:135:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 242,
                              "name": "stackingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1532:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 243,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "1548:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 245,
                              "indexExpression": {
                                "id": 244,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "1556:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1548:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1532:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1562:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1532:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 263,
                        "nodeType": "IfStatement",
                        "src": "1528:119:2",
                        "trueBody": {
                          "id": 262,
                          "nodeType": "Block",
                          "src": "1565:82:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 252,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74,
                                      "src": "1597:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 254,
                                    "indexExpression": {
                                      "id": 253,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 232,
                                      "src": "1605:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1597:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 255,
                                      "name": "stackingBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "1609:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 259,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 256,
                                        "name": "stakers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74,
                                        "src": "1625:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 258,
                                      "indexExpression": {
                                        "id": 257,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 232,
                                        "src": "1633:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1625:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1609:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 249,
                                    "name": "dummy_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68,
                                    "src": "1576:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Dummy_$23",
                                      "typeString": "contract Dummy"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "1576:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1576:61:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 261,
                              "nodeType": "ExpressionStatement",
                              "src": "1576:61:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 235,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "1494:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 236,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1498:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1498:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1494:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "initializationExpression": {
                    "assignments": [232],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1487:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "1479:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1479:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 234,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1491:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1479:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1514:3:2",
                      "subExpression": {
                        "id": 239,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1514:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 241,
                    "nodeType": "ExpressionStatement",
                    "src": "1514:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1474:180:2"
                }
              ]
            },
            "functionSelector": "f7feadaf",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 121,
                  "src": "1457:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1457:9:2"
              }
            ],
            "name": "issueDummyRewards",
            "nameLocation": "1430:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:2:2"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1467:0:2"
            },
            "scope": 268,
            "src": "1421:238:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 269,
        "src": "125:1537:2",
        "usedErrors": []
      }
    ],
    "src": "35:1629:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Stacking_DApp.sol",
    "exportedSymbols": {
      "Context": [963],
      "Dummy": [23],
      "ERC20": [838],
      "IERC20": [916],
      "IERC20Metadata": [941],
      "Stacking_Dapp": [268],
      "Tether": [292]
    },
    "id": 269,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": ["solidity", ">=", "0.8", ".10"],
        "nodeType": "PragmaDirective",
        "src": "35:25:2"
      },
      {
        "absolutePath": "project:/contracts/Tether_Token.sol",
        "file": "./Tether_Token.sol",
        "id": 59,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 293,
        "src": "64:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Dummy_Token.sol",
        "file": "./Dummy_Token.sol",
        "id": 60,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 24,
        "src": "94:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stacking_Dapp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 268,
        "linearizedBaseContracts": [268],
        "name": "Stacking_Dapp",
        "nameLocation": "134:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 63,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "167:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "153:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 61,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "153:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "537461636b696e672044617070",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "174:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b110a5c2358a1beea5d4df1c6a0084849fd8ff6536049897d85852fe801e38c8",
                "typeString": "literal_string \"Stacking Dapp\""
              },
              "value": "Stacking Dapp"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 65,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "209:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "194:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f9075fc6",
            "id": 68,
            "mutability": "mutable",
            "name": "dummy_token",
            "nameLocation": "232:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "219:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Dummy_$23",
              "typeString": "contract Dummy"
            },
            "typeName": {
              "id": 67,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66,
                "name": "Dummy",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23,
                "src": "219:5:2"
              },
              "referencedDeclaration": 23,
              "src": "219:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dummy_$23",
                "typeString": "contract Dummy"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c1d4821",
            "id": 71,
            "mutability": "mutable",
            "name": "tether_dummy",
            "nameLocation": "262:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "248:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Tether_$292",
              "typeString": "contract Tether"
            },
            "typeName": {
              "id": 70,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69,
                "name": "Tether",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 292,
                "src": "248:6:2"
              },
              "referencedDeclaration": 292,
              "src": "248:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Tether_$292",
                "typeString": "contract Tether"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 74,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "298:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "281:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "281:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 73,
              "nodeType": "ArrayTypeName",
              "src": "281:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "78197289",
            "id": 78,
            "mutability": "mutable",
            "name": "stackingBalance",
            "nameLocation": "347:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "312:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "320:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "312:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "331:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32ac90cf",
            "id": 82,
            "mutability": "mutable",
            "name": "hasStacked",
            "nameLocation": "399:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "367:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 80,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "386:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07e9417a",
            "id": 86,
            "mutability": "mutable",
            "name": "isStacking",
            "nameLocation": "446:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 268,
            "src": "414:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "422:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "414:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 84,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "433:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "515:97:2",
              "statements": [
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "dummy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "522:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dummy_$23",
                        "typeString": "contract Dummy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_dummyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "536:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Dummy_$23",
                        "typeString": "contract Dummy"
                      }
                    },
                    "src": "522:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dummy_$23",
                      "typeString": "contract Dummy"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "522:25:2"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "tether_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "554:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$292",
                        "typeString": "contract Tether"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 100,
                      "name": "_tetherDummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "569:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Tether_$292",
                        "typeString": "contract Tether"
                      }
                    },
                    "src": "554:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$292",
                      "typeString": "contract Tether"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "554:27:2"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "588:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "596:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "596:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "588:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "588:18:2"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_dummyToken",
                  "nameLocation": "481:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "475:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Dummy_$23",
                    "typeString": "contract Dummy"
                  },
                  "typeName": {
                    "id": 88,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87,
                      "name": "Dummy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23,
                      "src": "475:5:2"
                    },
                    "referencedDeclaration": 23,
                    "src": "475:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Dummy_$23",
                      "typeString": "contract Dummy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_tetherDummy",
                  "nameLocation": "501:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "494:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Tether_$292",
                    "typeString": "contract Tether"
                  },
                  "typeName": {
                    "id": 91,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 90,
                      "name": "Tether",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 292,
                      "src": "494:6:2"
                    },
                    "referencedDeclaration": 292,
                    "src": "494:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Tether_$292",
                      "typeString": "contract Tether"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:40:2"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:0:2"
            },
            "scope": 268,
            "src": "463:149:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "639:87:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "654:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "654:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 114,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "668:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "654:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "675:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        },
                        "value": "Only admin can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
                          "typeString": "literal_string \"Only admin can perform this action\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "646:66:2"
                },
                {
                  "id": 119,
                  "nodeType": "PlaceholderStatement",
                  "src": "719:1:2"
                }
              ]
            },
            "id": 121,
            "name": "onlyAdmin",
            "nameLocation": "627:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:2:2"
            },
            "src": "618:108:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "776:354:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 127,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "791:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "801:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "791:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742043616e6e6f74206265205a65726f",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "804:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
                          "typeString": "literal_string \"Amount Cannot be Zero\""
                        },
                        "value": "Amount Cannot be Zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2345af800b41470a7ef39c17f22d83bc26a8359b698035844f84c18f552ef33a",
                          "typeString": "literal_string \"Amount Cannot be Zero\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "783:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "783:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "863:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "863:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "883:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Stacking_Dapp_$268",
                              "typeString": "contract Stacking_Dapp"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Stacking_Dapp_$268",
                              "typeString": "contract Stacking_Dapp"
                            }
                          ],
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "875:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "875:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "890:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 133,
                        "name": "tether_dummy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "837:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$292",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 499,
                      "src": "837:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "837:61:2"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 145,
                        "name": "stackingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "905:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "921:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "921:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "905:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 149,
                          "name": "stackingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "935:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 152,
                        "indexExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "951:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "951:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "935:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 153,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "965:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "935:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "905:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "905:67:2"
                },
                {
                  "condition": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "985:23:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 157,
                        "name": "hasStacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "986:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 160,
                      "indexExpression": {
                        "expression": {
                          "id": 158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "997:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "997:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "986:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "981:70:2",
                  "trueBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "1010:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 165,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1032:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1032:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 162,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1019:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1019:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "1019:24:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 171,
                        "name": "isStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1059:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1070:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1070:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1059:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1084:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1059:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:29:2"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 178,
                        "name": "hasStacked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1095:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 181,
                      "indexExpression": {
                        "expression": {
                          "id": 179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1106:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1106:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1095:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1120:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1095:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:29:2"
                }
              ]
            },
            "functionSelector": "cda6b847",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeToken",
            "nameLocation": "741:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "760:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "752:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "751:17:2"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:2"
            },
            "scope": 268,
            "src": "732:398:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "1167:248:2",
              "statements": [
                {
                  "assignments": [190],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1182:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 225,
                      "src": "1174:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1174:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "baseExpression": {
                      "id": 191,
                      "name": "stackingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1192:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 194,
                    "indexExpression": {
                      "expression": {
                        "id": 192,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1208:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1192:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1174:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "1236:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1246:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1236:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220737461636b696e672062616c616e6365206973207a65726f",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1249:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
                          "typeString": "literal_string \"Your stacking balance is zero\""
                        },
                        "value": "Your stacking balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf1172215cce937cb99cc2ae2dcd772791efda83b83f9b9f822a37ee2070ae11",
                          "typeString": "literal_string \"Your stacking balance is zero\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1312:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1312:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 208,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "1324:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 203,
                        "name": "tether_dummy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1290:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Tether_$292",
                          "typeString": "contract Tether"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "1290:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:42:2"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 211,
                        "name": "stackingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1341:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 214,
                      "indexExpression": {
                        "expression": {
                          "id": 212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1357:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1357:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1341:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1371:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1341:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:31:2"
                },
                {
                  "expression": {
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 218,
                        "name": "isStacking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1379:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 221,
                      "indexExpression": {
                        "expression": {
                          "id": 219,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1390:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1390:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1379:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1404:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1379:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:30:2"
                }
              ]
            },
            "functionSelector": "4aa3f624",
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unStakeToken",
            "nameLocation": "1145:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1157:2:2"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:2"
            },
            "scope": 268,
            "src": "1136:279:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "1467:192:2",
              "statements": [
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "1519:135:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 242,
                              "name": "stackingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1532:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 243,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74,
                                "src": "1548:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 245,
                              "indexExpression": {
                                "id": 244,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "1556:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1548:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1532:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1562:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1532:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 263,
                        "nodeType": "IfStatement",
                        "src": "1528:119:2",
                        "trueBody": {
                          "id": 262,
                          "nodeType": "Block",
                          "src": "1565:82:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 252,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 74,
                                      "src": "1597:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 254,
                                    "indexExpression": {
                                      "id": 253,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 232,
                                      "src": "1605:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1597:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 255,
                                      "name": "stackingBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "1609:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 259,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 256,
                                        "name": "stakers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74,
                                        "src": "1625:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 258,
                                      "indexExpression": {
                                        "id": 257,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 232,
                                        "src": "1633:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1625:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1609:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 249,
                                    "name": "dummy_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68,
                                    "src": "1576:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Dummy_$23",
                                      "typeString": "contract Dummy"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 412,
                                  "src": "1576:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1576:61:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 261,
                              "nodeType": "ExpressionStatement",
                              "src": "1576:61:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 235,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "1494:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 236,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1498:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1498:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1494:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "initializationExpression": {
                    "assignments": [232],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1487:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "1479:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1479:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 234,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1491:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1479:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1514:3:2",
                      "subExpression": {
                        "id": 239,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1514:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 241,
                    "nodeType": "ExpressionStatement",
                    "src": "1514:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1474:180:2"
                }
              ]
            },
            "functionSelector": "f7feadaf",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 228,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 121,
                  "src": "1457:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1457:9:2"
              }
            ],
            "name": "issueDummyRewards",
            "nameLocation": "1430:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1447:2:2"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1467:0:2"
            },
            "scope": 268,
            "src": "1421:238:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 269,
        "src": "125:1537:2",
        "usedErrors": []
      }
    ],
    "src": "35:1629:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-18T15:58:48.241Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
